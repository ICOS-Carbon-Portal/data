akka{
	loggers = ["akka.event.slf4j.Slf4jLogger"]
	logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

	http.server.parsing{
		max-content-length = 128g
		max-uri-length = 64k
	}
	log-dead-letters = 1
	log-dead-letters-during-shutdown = off
}

cpdata{
	interface = "127.0.0.1"
	auth {
		ICOS: ${cpauthAuthPub} //substituted from cpauth core config
		SITES: ${fieldsitesAuthPub} //substituted from cpauth core config
	}
	netcdf {
		folder = "/disk/data/common/netcdf/dataDemo/"
		dateVars = ["date", "mtime", "time", "tstep"]
		latitudeVars = ["latitude", "lat"]
		longitudeVars = ["longitude", "lon"]
		elevationVars = ["nz"]
	}
	meta {
		baseUrl = "http://127.0.0.1:9094/"
		sparqlEndpointPath = "sparql"
		uploadApiPath = "upload"
	}
	upload {
		folder: "./fileStorage"
		irods {
			host: "130.237.230.190"
			port: 1247
			username: "oleg"
			password: "password"
			homeDirectory: "/eudat.se/projects/icos"
			zone: "eudat.se"
			defaultResource: "EUDAT",
			dryRun: false
		}
	}
	stilt {
		mainFolder = "/disk/data/STILT/"
	}

	restheart{
		baseUri = "http://127.0.0.1:8088"
		dbNames {
			ICOS: "db"
			SITES: "sitesdb"
		}
		usersCollection = "users"
		portalUsageCollection = "portaluse"
		dobjDownloadsCollection = "dobjdls"
		dobjDownloadsAggregations = {
			"aggrs":[{
				"uri": "downloadCounts",
				"type": "pipeline",
				"stages":[
					{"_$group": {
						"_id": {"_$concat": ["https://meta.icos-cp.eu/objects/", {"_$substr": ["$dobj.hash", 0, 24]}]},
						"fileName": {"_$first": "$dobj.fileName"},
						"count": {"_$sum": 1}
					}},
					{"_$sort": {"count": -1}}
				]
			}, {
				"uri": "getCreatorsAndContributors",
				"type": "pipeline",
				"stages": [{
					"_$project": {
						"cont": {
							"_$concatArrays": [
								"_$dobj.specificInfo.productionInfo.contributors.self.uri",
								["$_dobj.specificInfo.productionInfo.creator.self.uri"]
							]
						},
						"dataLvl": "_$dobj.specification.dataLevel",
						"dobj.specification.dataLevel": "1",
						"dobj.specificInfo.acquisition.station.org.self.uri": "1"
					}
				}, {
					"_$project": {
						"dataproviders": {
							"_$cond": [
								{"_$eq": ["_$dobj.specification.dataLevel", "0"]},
								"_$dobj.specificInfo.acquisition.station.org.self.uri",
								"_$cont"
							]
						}
					}
				}, {
					"_$unwind" : "_$dataproviders"
				}, {
					"_$group": {"_id" : "_$dataproviders", "count" : {"_$sum" : 1}}
				}]
			}, {
				"uri": "getDownloadStats",
				"type": "pipeline",
				"stages": [
					{"$match": {
					  "$and": [
					    {"dobj.specification.self.uri": {"$in": {"$var": "specification"}}},
					    {"dobj.specification.format.uri": {"$in": {"$var": "format" }}},
							{"dobj.specification.dataLevel": {"$in": {"$var": "dataLevel"}}},
							{"dobj.specificInfo.acquisition.station.name": {"$in": {"$var": "stations"}}},
							{"$or": [
								{"dobj.specificInfo.productionInfo.creator.self.uri": {"$in": {"$var": "contributors"}}},
								{"dobj.specificInfo.productionInfo.contributors.self.uri": {"$in": {"$var": "contributors"}}}
							]},
							{"dobj.specificInfo.acquisition.station.theme": {"$in": {"$var": "themes"}}}
					  ]
					}},
					{"$group": {
						"_id": {"_$concat": ["https://meta.icos-cp.eu/objects/", {"_$substr": ["$dobj.hash", 0, 24]}]},
						"fileName": {"_$first": "$dobj.fileName"},
						"specification": {"_$first": "$dobj.specification"},
						"count": {"_$sum": 1}
					}},

					{"$sort": {"count": -1}}
				]
			}, {
				"uri": "getSpecifications",
				"type": "pipeline",
				"stages":[
					{"_$group": {
						"_id": "$dobj.specification.self.uri",
						"label": {"_$first": "$dobj.specification.self.label"},
						"count": {"_$sum": 1}
					}},
					{"_$sort": {"count": -1}}
				]
			}, {
				"uri": "getFormats",
				"type": "pipeline",
				"stages":[
					{"_$group": {
							"_id": "$dobj.specification.format.uri",
							"label": {"_$first": "$dobj.specification.format.label"},
							"count": {"_$sum": 1}
						}
					}
				]
			}, {
				"uri": "getDataLevels",
				"type": "pipeline",
				"stages":[
					{"_$group": {
							"_id": "$dobj.specification.dataLevel",
							"label": {"_$first": "$dobj.specification.dataLevel"},
							"count": {"_$sum": 1}
						}
					}
				]
			}, {
				"uri": "getContributors",
				"type": "pipeline",
				"stages":[
					{
						"$project": {
							"contributors": {
								"_$concatArrays": [
									"$dobj.specificInfo.productionInfo.contributors",
									["$dobj.specificInfo.productionInfo.creator"]
								]
							}
						},
					}, {
						"$unwind" : "$contributors"
					},
					{"$group": {
							"_id": "$contributors.self.uri",
							"firstName": {"$first": "$contributors.firstName"},
							"lastName": {"$first": "$contributors.lastName"},
							"count": {"$sum": 1}
						}
					},
					{
						"$project": {
							"_id": 1,
							"label": {"$concat": ["$firstName", " ", "$lastName"]},
							"count": 1
						}
					}
					{"$sort": {"label": 1}}
				]
			}, {
				"uri": "getStations",
				"type": "pipeline",
				"stages":[
					{"$group": {
							"_id": "$dobj.specificInfo.acquisition.station.name",
							"label": {"$first": "$dobj.specificInfo.acquisition.station.name"},
							"count": {"$sum": 1}
						}
					},
					{"$sort": {"label": 1}}
				]
			}, {
				"uri": "getThemes",
				"type": "pipeline",
				"stages":[
					{"$group": {
							"_id": "$dobj.specificInfo.acquisition.station.theme",
							"label": {"$first": "$dobj.specificInfo.acquisition.station.theme"},
							"count": {"$sum": 1}
						}
					},
					{"$sort": {"label": 1}}
				]
			}]
		}
	}

	etcFacade {
		folder: "./fileStorage/etcFacadeStaging"
		secret: "dummy to be replaced" //common secret for station-specific password autogeneration
		stationOverrides{ //if some stations' passwords got compromised, for example.
			"FA-Lso": "p4ssw0rd"
		}
	}
}
